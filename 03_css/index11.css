.container {
    width: 300px;
    height: 400px;
    background-color: #333;
    /* 좌우 방향 가운데 배치 */
    margin : 0 auto;
    display: flex;

/* 부모요소에 flex를 선언하면, 아이템(자식요소)이 가로 방향으로 배치가 된다, */

/*  flexbox 기본용어
    - 주축 (main axis) : 아이템의 배치 방향
        주축은 가로가 될 수도 있고 세로가 될 수도 있다.
    - 교차축 (cross axis) : 주축의 수직 축 (row면 column, column이면 row)
    */

    /* flex-direction : flex 방향이 가로인지 세로인지?

    - row (default) : 가로정렬 (좌 -> 우)
    - row- reverse : 가로정렬 (우 -> 좌) 
        reverse는 "어떤 순서로 할것인지"
    - column: 세로정렬 (위 -> 아래)
    - column- reverse : 세로정렬 (아래 -> 위)
    */

        /* row일 때 */
    /* flex-direction: row; */
    /* flex-direction: row-reverse; */
    /* column 때 */
    /* flex-direction: column; */
    /* flex-direction: column-reverse; */

    /*  justify-content : "주축(가로세로)에 대해서" 아이템을 "어떻게 정렬" 할 것인지?

    - flex-diretion이 가로정렬; 주축 = row(가로)
    - flex-direction이 세로정렬; 주축 = column(세로) */

    /* justify-content: flex-start; */
    /* justify-content: flex-end; */
    /* justify-content: space-between; */
    /* justify-content: space-around; */
    /* justify-content: space-evenly; */

    /*
    - flex-start (default): 아이템을 주축에 대해서 start지점을 기준으로 나열 
    - flex-end: 아이템을 주축에 대해서 end 지점을 기준으로 나열
    - space-between: 처음과 마지막 아이템을 양 끝에 붙이고, 나머지 영역 공평하게 나눔
    - space-around: 아이템들의 모든 여백을 공평하게 갖도록 함 (양끝 영역의 단위가 1이라면, 나머지 영역의 단위는 2)
    - space-evenly: start부터 첫 아이템의 간격, 아이템 끼리의 간격, 마지막 아이템 부터 end 까지의 모든 간격이 일정 */

    /* align-items: 교차축에 대해서 아이템을 어떻게 배치할 것인지? 
    
    - flex-direction이 수평 정렬; 교차축 = column (세로)
    - flex-direction이 수직 정렬; 교차축 = row (가로) */

    /* align-items: stretch;  */
    /* align-items: flex-start; */
    /* align-items: flex-end; */
    /* align-items: center; */
    /* align-items: baseline; */

    /* - stretch (default): container의 교차축을 채우기 위해 늘림
        - 현재 .flex-items 에 width, height 값이 있어 늘어나지는 않음
    - flex-start: 교차축에 대하여 시작점으로 정렬
    - flex-end: 교차축에 대하여 끝점으로 정렬
    - center: 교차축에 대하여 가운데 정렬
    - baseline: 아이템을 텍스트의 베이스라인(기본선)을 기준 정렬 */

    /*  flex-wrap : 줄바꿈(개행)처리
        -> 컨테이너(부모)가 한 줄에 아이템을 다 수용하지 못할 때, 줄 바꿈 관련 설정 
        -> nowrap (default) : 줄바꿈 안함
        - wrap : 줄바꿈 함
        - wrap-reverse : 줄바꿈 하는데 아이템을 역순 배치
        */

        /* flex-wrap: nowrap */
        /* flex-wrap: wrap */
        /* flex-wrap: wrap-reverse */

    /* align-content : 여러 행에 대한 정렬 
        (조건) flex-wrap : wrap/wrap-reverse 상태에서 아이템이 두 줄 이상일 때 수직축 방향 설정함 */

        /* align-content: stretch; */
        /* align-content: flex-start; */
        /* align-content: flex-end; */
        /* align-content: center; */
        /* align-content: space-between; */
        /* align-content: space-around; */
        /* align-content: space-evenly; */

    /* 이게 다 부모요소에 들어가야함!!!!!!!!!! */

}

.items {
    width: 100px;
    height: 100px;
    font-size: 30px;
    text-align: center;
    line-height: 100px;
}
.item1 {
    background-color: red;
}
.item2 {
    background-color: orange;
}
.item3 {
    background-color: yellow;
}
.item4 {
    background-color: green;
}
.item5 {
    background-color: blue;
}


/* div 안에 div 정 가운데 정렬 */

.outer1 {
    width: 300px;
    height: 300px;
    background-color: aquamarine;
}

.inner1 {
    width: 100px;
    height: 100px;
    background-color: pink;
}


/* ver1. position, transform */

.outer2 {
    position: relative;
}

.inner2 {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50% , -50%);
}

/* ver2. flex */

.outer2 {
    width: 300px;
    height: 300px;
    background-color: aquamarine;

    display: flex;
}

.inner2 {
    width: 100px;
    height: 100px;
    background-color: pink;

    flex-direction: column;
    justify-content: space-around;
}




* {
    box-sizing: border-box;
    font-size: 30px;
    font-weight: 700;

}

ul {
    /* ul 태그가 기본적으로 가진 속성들을 초기화 */
    padding: 0;
    list-style: none;
    margin: 0;
    padding: 0;
}

header {
    background-color: #ddd;
    width: 100%;
    height: 80px;
    margin-bottom: 150px;
    padding : 0 20px;
}

.header1 {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.header1 .menus {
    display: flex;
}

.header1 .menus li {
    margin-left: 20px;
}

.header2 {
    display: flex;
    justify-content: space-between;
    align-items: center;
}
